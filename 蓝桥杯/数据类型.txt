数据类型
bit:0/1 1byte = 8bit  0000 1111
C语言的数据类型：
	基本数据类型
		整型		int  4字节 	0000 0000 0000 0000
								0000 0000 0000 0000
							-21 4748 3648~2147453647

							int a = 1;
								0000 0000 0000 0000
								0000 0000 0000 0001
							int b = -1;
								1000 0000 0000 0000
								0000 0000 0000 0001

						原码	0000 0000 0000 0001
						反码	0111 1111 1111 1110
						补码	0111 1111 1111 1111
						移码	1111 1111 1111 1111
		浮点型
			float 精度：小数点后6~7位
			double精度：小数点后13~14位
		字符型
			char 1字节 -127~128     
我
w 

整型常量：
	1.十进制数
	2.八进制数 “0”开头 062   
	3.十六进制数 “0X” “0x” abcdef   
整型变量：
	int 4字节/8字节 -1/1     21 4748 3647
	unsigned int 4字节（无符号） 1  21 4748 3647
	signed int 4字节
	short 2字节  
	unsigned short
	signed short 
	long 4字节/8字节
	unsigned long
	signed long
	更长的储存类型  long long 
进制：
	1.二进制  1+1 = 10   1101 1*2^3+1*2^2+0*2^1+0*2^0 11
	2.八进制  1+7 = 10   75  7*8^1+5*8^0
	3.十进制  1+9 = 10   345 3*10^2+4*10^1+4*10^0
	4.16进制  1+0xf = 0x10

实型数据
实型常量：
	（1）小数形式  3.14
	（2）指数形式（科学记数法） 123e3
实型变量：
	单精度 float类型	4




字节  
	双精度 double类型	4字节
		小数的储存：近似数  2.2+3.6 = 5/4.9
	长双精度 long double 8字节

字符型数据
字符型常量：
	'A'、'a'
	转义符：
	\n  \t \b \"
字符型变量：
	char


	重点：
		字符的储存：
			ASCII  A char => 65 
						0100 0001
				A~Z A:65 a~z a:97  space 32 
				0~9 0:48

				B-1 => char : A int :65
		字符串常量：
			C语言中没有字符串的定义
				字符型数组
				char[]

			注：
				不要把字符常量和字符串常量混淆！
				字符常量：'a' 占用1字节
				字符串常量："a" 占用2字节	

C语言中的输入输出流：
		输入：scanf
		输出：printf

		字符操作：
			getchar();	注意：能够接受回车（\n）
			putchat();

		字符串操作：
			gets();		注意：回车作为结束标志
			puts();

main：
		main函数
	C语言中，函数：
				有返回值的函数  :return 返回值（跟函数类型相同）；
				无返回值的函数

int main()
{
	return 0;
}

void main()
{

}	

编写程序，求输入三个整数的最小值。
#include<stdio.h>
int main()
{
	int a,b,c;
	scanf("%d%d%d",&a,&b,&c);
	if(a<b)
	{
		if(a<c)
		{
			printf("最小值是%d",a);
		}
		else
		{
			printf("最小值是%d",c);
		}
	}
	else
	{
		if(b<c)
		{
			printf("最小值是%d",b);
		}
		else
		{
			printf("最小值是%d",c);
		} 
	}
	return 0;
}
	编写程序，输入一个整数，打印它是奇数还是偶数。
#include<stdio.h>
int main()
{
	int x;
	scanf("%d",&x);
	if(x%2==0)
	{
		printf("%d是偶数",x);
	}
	else
	{
		printf("%d是奇数",x);
	}
	return 0;
} 
















